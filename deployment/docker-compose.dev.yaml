version: "3.6"

services:
  app:
    platform: linux/amd64
    image: ghcr.io/{{elsiniestra}}/{{python-backend-template}}:dev-latest  # TODO: cookiecutter
    depends_on:
      - redis-stack
      - postgres
    ports:
      - 8000:8000
    env_file:
      - ../.env
    networks:
      - network-bridge
      - getaway_traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.catalan_chess_backend.rule=Host(`${APP_HOST?Variable not set}`) || Host(`www.${APP_HOST?Variable not set}`)
      - traefik.http.routers.catalan_chess_backend.entrypoints=secureweb
      - traefik.http.routers.catalan_chess_backend.tls.certresolver=myresolver
      - traefik.http.services.catalan_chess_backend.loadbalancer.server.port=8000
      - traefik.docker.network=getaway_traefik

  celery:
    command: python -m celery -A src.core.celery_app worker -l INFO
    image: ghcr.io/{{elsiniestra}}/{{python-backend-template}}:v${APP_VERSION}  # TODO: cookiecutter
    depends_on:
      - redis-stack
    env_file:
      - ../.env
    environment:
      - POSTGRES_HOST=postgres
    networks:
      - network-bridge

  postgres:
    image: postgres:15.4-alpine3.18@sha256:f36c528a2dc8747ea40b4cb8578da69fa75c5063fd6a71dcea3e3b2a6404ff7b
    hostname: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
    env_file:
      - ../.env
    volumes:
      - "pg-data:/var/lib/postgresql/data"
    networks:
      - network-bridge

  redis-stack:
    image: redis/redis-stack:6.2.6-v9@sha256:b1a05aca249e8ae184495b7dc225bee8fcb76a44d980a3ad127e1aaf0bb0c996
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    networks:
      - network-bridge
    ports:
      - "8192:8001"

networks:
  network-bridge:
  getaway_traefik:
    external: true
    
volumes:
  pg-data:
  redis-data:
